// px to rem
@function rem($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1rem;
}

@mixin size($width,$height: $width) {
  width: $width;
  height: $height;
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content};
  :-moz-placeholder           {@content};
  ::-moz-placeholder          {@content};
  :-ms-input-placeholder      {@content};
}



%crossedOut {
  white-space: nowrap;
  position: relative;
  display: inline-block;
  &:before {
    content: "";
    position: absolute;
    top: 50%;
    width: 100%;
    height: 1px;
    background-color: var(--gray);
  }
}

%underlineWhite {
  white-space: nowrap;
  position: relative;
  display: inline-block;
  &:before {
    content: "";
    position: absolute;
    bottom: 0%;
    width: 0%;
    height: 1px;
    background-color: #fff;
    transition: width .3s;
  }
  &:hover {
    &:before {
      width: 100%;
    }
  }
}
%underlineBlack {
  white-space: nowrap;
  position: relative;
  display: inline-block;
  &:before {
    content: "";
    position: absolute;
    bottom: 0%;
    width: 0%;
    height: 1px;
    background-color: #000;
    transition: width .3s;
  }
  &:hover {
    &:before {
      width: 100%;
    }
  }
}

%underlineColor {
  white-space: nowrap;
  position: relative;
  display: inline-block;
  &:before {
    content: "";
    position: absolute;
    bottom: 0%;
    width: 0%;
    height: 1px;
    background-color: var(--primary);
    transition: width .3s;
  }
  &:hover {
    &:before {
      width: 100%;
    }
  }
}

%fill {
    position: relative;
    overflow: hidden;
    margin-left: -12px;
    &:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1;
      background-color: var(--primary);
      height: 100%;
      width: calc(100% + 24px);
      transition: .3s;
  }
    .link {
        position: relative;
        display: block;
        height: 100%;
        z-index: 2;
        transition: color .3s;
    }
    &:hover {
     
      .link {
          color: #fff;
        }
    }
    &.LtoR {
      &:before {
        transform: translateX(calc(-100% - 24px));
      }
      &:hover {
        &:before {
          transform: translateX(0%);
        }
      }
    }
    &.RtoL {
      &:before {
        transform: translateX(calc(100% + 24px));
      }
      &:hover {
        &:before {
          transform: translateX(0%);
        }
      }
    }
    &.BtoT {
      &:before {
        transform: translateY(100%);
      }
      &:hover {
        &:before {
          transform: translateY(0%);
        }
      }
    }
    &.TtoB {
      &:before {
        transform: translateY(-100%);
      }
      &:hover {
        &:before {
          transform: translateY(0%);
        }
      }
    }
}

%column {
  display: flex;
  flex-direction: column;
  justify-content: center;
}
%columnBetween {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

%center {
  display: flex;
  align-items: center;
  justify-content: center;
}
%start {
  display: flex;
  align-items: baseline;
  justify-content: flex-start;
}
%between {
  display: flex;
  align-items: baseline;
  justify-content: space-between;
}

%end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}


%boxShadow {
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);
}